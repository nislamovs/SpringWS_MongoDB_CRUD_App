plugins {
	id "io.freefair.lombok" version "4.1.6"
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.22.1'
	id 'com.palantir.docker-run' version '0.22.1'
}

group = 'com.soap'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

// tag::xsd[]
sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'build/generated-sources/jaxb'
		}
	}
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.schema = "src/main/resources/xsd_schemas/persons.xsd"

	outputs.dir sourcesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)

			xjc(destdir: sourcesDir, schema: schema) {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}
		}
	}
}

compileJava.dependsOn genJaxb
// end::xsd[]

// tag::jaxb[]
configurations {
	jaxb
}

dependencies {

//	Lombok
	compileOnly 			'org.projectlombok:lombok'
	annotationProcessor 	'org.projectlombok:lombok'

//	Spring
	implementation 			'org.springframework.boot:spring-boot-starter'
	implementation 			'org.springframework.boot:spring-boot-starter-web'
	implementation          'javax.validation:validation-api:2.0.1.Final'

//SOAP specific
	implementation  		'org.springframework.boot:spring-boot-starter-web-services'
	implementation 			'wsdl4j:wsdl4j'

	//Fixing "Implementation of JAXB-API has not been found on module path or classpath." error.
	compile('javax.xml.bind:jaxb-api:2.3.0')
	compile('javax.activation:activation:1.1')
	compile('org.glassfish.jaxb:jaxb-runtime:2.3.0')

	jaxb("org.glassfish.jaxb:jaxb-xjc")


//	Mapping
	implementation 			"org.mapstruct:mapstruct:1.3.1.Final"
	annotationProcessor 	"org.mapstruct:mapstruct-processor:1.3.1.Final"

//	MongoDb
	implementation 		  	'net.ozwolf:mongo-trek:5.0.0'
	implementation        	"org.springframework.boot:spring-boot-starter-data-mongodb"

//	testCompile 			'com.github.fakemongo:fongo:2.1.1'						//Fongo is an in-memory java implementation of MongoDB

	compile 		  		'de.flapdoodle.embed:de.flapdoodle.embed.mongo'			//<--- not working for unknown reason
//	compile 		  		'cz.jirutka.spring:embedmongo-spring:1.3.1'

	testImplementation 		'de.flapdoodle.embed:de.flapdoodle.embed.mongo'			//<--- not working for unknown reason
	testImplementation 		'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

// tag::jaxb[]
configurations {
	jaxb
}

bootJar {
	archiveBaseName = 'soap_server'
	archiveVersion =  '1.0.0'
	mainClassName = 'com.soap.soapserver.SoapserverApplication'
}
// end::jaxb[]

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree("build/libs/soap_server-1.0.0.jar"))
	into("build/dependency")
}

docker {
	name "soap_server"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}